#!/usr/bin/env bash

set -eu -o pipefail

prgname=${0##*/}

playback_up() {
    amixer -q set Master 5%+
}

playback_down() {
    amixer -q set Master 5%-
}

playback_toggle() {
    amixer -q set Master toggle
}

playback_dock_toggle() {
    amixer -q -c 0 set Headphone,1 toggle
}

capture_toggle() {
    amixer -q set Capture toggle
}

pa_sink_toggle() {
    local all current tmp
    pactl stat &>/dev/null || return 0
    tmp=$(painfo sinks)
    [[ $tmp ]] || return 1
    readarray -t all <<<"$tmp"
    current=$(painfo default-sink)
    local i len=${#all[@]}
    for (( i=0; i<len; i++ )); do
        [[ ${all[i]} = "$current" ]] && break
    done
    i=$((i+1))
    (( i >= len )) && i=0
    pactl set-default-sink "${all[i]}"
}

if (( ! $# )); then
    ti_col0=$(tput hpa 0) || ti_col0='\e[1G'
    ti_clr_eol=$(tput el)
    trap echo EXIT
    while true; do
        stat=$(status audio)
        printf "${ti_col0}%s${ti_clr_eol}" "$stat"
        read -rs -N 1 c </dev/tty
        case $c in
            [kK])
                playback_up
                ;;
            [jJ])
                playback_down
                ;;
            [mM])
                playback_toggle
                ;;
            [nN])
                playback_dock_toggle
                ;;
            [rR])
                capture_toggle
                ;;
            [oO])
                pa_sink_toggle
                echo
                status pa_sink
                ;;
            *)
                break
                ;;
        esac
    done
    exit
fi

case $1 in
    playback_up | playback_down | \
    playback_toggle | playback_dock_toggle | \
    capture_toggle)
        $1
        status-osd audio
        ;;
    pa_sink_toggle)
        $1
        status-osd pa_sink
        ;;
    *)
        echo "usage: $prgname [playback_up | playback_down | playback_toggle | playback_dock_toggle | capture_toggle | pa_sink_toggle]" >&2
        exit 2
        ;;
esac
