#!/usr/bin/env bash
# vim: fdm=marker

set -eu

prgname=${0##*/}

sessions=(

    # Arch (01/2020) {{{
    # ----------------------------------------
    #
    # awesome
    # blackbox
    # bspwm
    # ctwm
    # enlightenment
    # fluxbox
    # fvwm
    # gala
    # herbstluftwm
    # i3            # (i3-gaps, i3-wm)
    # icewm
    # jwm
    # kwin_x11      # (kwin) KDE Plasma
    # lwm
    # marco         # fork of Metacity
    # metacity      # GNOME 2.x / GNOME Flashback; using GTK 3.x since 3.12.0
    # muffin        # Cinnamon; fork of Mutter
    # mutter        # GNOME 3.x; using Clutter toolkit
    # notion
    # openbox
    # pekwm
    # qtile
    # ratpoison
    # rio           # (plan9)
    # spectrwm      # formerly scrotwm
    # twm           # (xorg-twm)
    # ukwm
    # xfwm4
    # xmonad
    #
    # }}}

    # AUR (01/2020) {{{
    # ----------------------------------------
    #
    # 2bwm
    # 9wm
    # adwm
    # aewm++
    # afterstep
    # alopex
    # antares
    # antiwm
    # berry
    # bubbles
    # chamfer
    # cwm
    # dwin
    # dwm
    # echinus
    # etwm
    # evilwm
    # failsafewm
    # flatman
    # flwm
    # foo-wm
    # frankenwm
    # glass-wm
    # goomwwm
    # heliwm
    # howm
    # jbwm
    # karmen
    # katriawm
    # larswm
    # lcarswm
    # leftwm
    # mantis-wm
    # matchbox
    # matwm2
    # mcwm
    # mlvwm
    # mmwm
    # moksha
    # nimdow
    # olvwm
    # pawm
    # qvwm
    # sawfish
    # sowm
    # stumpwm
    # subtle
    # tinywm
    # tritium
    # twobwm
    # ude
    # unagi
    # uwm
    # velox
    # vtwm
    # waimea
    # windowchef
    # windowlab
    # windowmaker
    # windwm
    # wingo
    # wm2
    # wmderland
    # wmfs
    # wmii
    # wmx
    # wtftw
    # wumwum
    # xdwm
    # xwm
    # yeahwm
    #
    # }}}

    # Other {{{
    # ----------------------------------------
    #
    # aewm
    # catwm
    # dminiwm
    # ion3
    # monsterwm
    # possum-wm
    # smallwm
    # swm
    #
    # }}}

    ctwm
    i3
    i3-local
    jwm
    kodi
    main
    openbox
    rio
    xfwm4
    xmonad
)

if (( ! $# )); then
    printf '%s\n' "${sessions[@]}"
    exit
fi

_usage() {
    echo "usage: $prgname {--reset | --restart | arg...}"
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

sdu() { systemctl --user "$@"; }

datadir=~/.local/share/xorg
rundir=$XDG_RUNTIME_DIR/xorg

# ----------------------------------------

case $1 in
    --startup)
        kill -USR1 -- "$XSESSIONPID"
        exit
        ;;
    --reset)
        confirm 'Careful! Continue?' n || exit 0
        screen=$(xserverq screen)
        sdu restart xsession@:"$screen".target
        exit
        ;;
    --restart)
        confirm 'Careful! Continue?' n || exit 0
        screen=$(xserverq screen)
        touch "$rundir/keepserver:$screen"
        sdu restart xsession@:"$screen".service
        exit
        ;;
    -h|--help)
        usage
        ;;
    -*)
        usage_err
        ;;
esac

# ----------------------------------------

declare -i x11=0
has-x11 && x11=1

if (( ! x11 )); then
    echo 'This script requires working DISPLAY.' >&2
    exit 1
fi

screen=$(xserverq screen)
exec 8>"$rundir/$prgname:$screen".lock
flock -n 8 || exit 3

exec &>"$datadir/$prgname:$screen".out
echo $'\n--------------------------------------------------'
printf '> %s: %s\n\n' "$prgname" "$*"

cleanup() {
    local retstat=$?
    set +e
    post_hook
    # shellcheck disable=SC2046
    kill $(jobs -p) &>/dev/null
    printf '\n> %s: exit %s\n' "$prgname" "$retstat"
}
trap cleanup EXIT

session=-
for i in "${sessions[@]}"; do
    [[ $1 = "$i" ]] && { session=$i; break; }
done
printf 'session: %s\n' "$session"

export GDK_BACKEND=x11
export XSESSION=$session
export XSESSIONPID=$$

# ----------------------------------------

pre_hook() { :; }
post_hook() { :; }
exec_hook() { :; }
startup_hook() { :; }

# shellcheck disable=SC1090
. ~/bin/xsession.default

set +e

pre_hook
trap startup_hook USR1
exec_hook "$@" & pid=$!

while true; do
    wait "$pid"
    (( $? > 128 )) || break
done
