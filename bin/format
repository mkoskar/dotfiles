#!/usr/bin/env bash
#
# See also: https://github.com/Chiel92/vim-autoformat

set -eu

prgname=${0##*/}

_usage() {
    echo "usage: $prgname [-f filetype] [-s shiftwidth] [-t textwidth] [file]"
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

ft=
declare -i sw=4 tw=78
while getopts f:s:t:h opt; do
    case $opt in
        f) ft=$OPTARG ;;
        s) sw=$OPTARG ;;
        t) tw=$OPTARG ;;
        h) usage ;;
        *) usage_err ;;
    esac
done
shift $((OPTIND-1))

# ----------------------------------------

if (( $# )); then
    exec <"$1"
    ft=$(vim -NXn -i NONE -u NONE -es \
             --cmd 'filetype on' -c 'verb echon &ft | qa!' "$1" 2>&1)
fi

try() {
    ! hash -- "$1" &>/dev/null || exec "$@"
}

case $ft in
    cs)
        #try uncrustify
        try astyle --mode=cs --style=break --indent-namespaces -pcH -s "$sw"
        ;;
    css)
        try css-beautify -s "$sw"
        try sass-convert --from css --to css --indent "$sw"
        ;;
    c | cpp | objc)
        #try clang-format
        #try uncrustify
        try astyle --mode=c --style=break -pcH -s "$sw"
        ;;
    dart)
        try dartfmt
        ;;
    go)
        try gofmt
        ;;
    haskell)
        try stylish-haskell
        ;;
    html)
        try html-beautify -s "$sw"
        try tidy -config ~/.tidyrc --indent-spaces "$sw" -wrap "$tw"
        ;;
    java)
        #try clang-format
        #try uncrustify
        try astyle --mode=java --style=attach -pcH -s "$sw"
        ;;
    javascript)
        #try clang-format
        try js-beautify -s "$sw" -w "$tw"
        ;;
    json)
        #try python -m json.tool
        try js-beautify -s "$sw"
        ;;
    markdown)
        try remark --silent --no-color
        ;;
    perl)
        try perltidy --perl-best-practices --format-skipping -q
        ;;
    python)
        #try yapf "--style={based_on_style:pep8, indent_width:$sw, column_limit=$tw, blank_line_before_nested_class_or_def:true, dedent_closing_brackets:true}"
        try autopep8 --indent-size="$sw" --max-line-length="$tw" -
        try yapf "--style={based_on_style:pep8, indent_width:$sw, blank_line_before_nested_class_or_def:true, dedent_closing_brackets:true}"
        ;;
    ruby)
        try rbeautify -s -c "$sw"
        ;;
    rust)
        try rustfmt
        ;;
    sass)
        try sass-convert --from sass --to sass --indent "$sw"
        ;;
    scss)
        try sass-convert --from scss --to scss --indent "$sw"
        ;;
    xhtml)
        try tidy -config ~/.tidyrc --output-xhtml yes --indent-spaces "$sw" -wrap "$tw"
        ;;
    xml)
        #try xmlstarlet format --indent-tab
        #try tidy -config ~/.tidyrc -xml --output-xml yes --indent-spaces "$sw" -wrap "$tw"
        export XMLLINT_INDENT='    '
        tidy -config ~/.tidyrc -xml --output-xml yes --indent-spaces "$sw" | xmllint --format -
        exit 0
        ;;
    *)
        try par -T "$sw" -w "$tw"
        try fmt -u -w "$tw"
        try fold -s -w "$tw"
        try wrap -w "$tw"
        ;;
esac

cat
exit 1
