#!/usr/bin/env bash

set -eu -o pipefail

prgname=${0##*/}

_usage() {
    cat <<-EOF
	usage: $prgname algos
	       $prgname {cat | catall} {asn1 | ec | rsa | req | sess | x509}
	       $prgname check
	       $prgname {ciphers | ciphers-ecdsa-rsa}
	       $prgname {con | con-rsaonly}
	       $prgname csplit
	       $prgname {gen gen+cert gen+csr) [params]
	EOF
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

while getopts h opt; do
    case $opt in
        h) usage ;;
        *) usage_err ;;
    esac
done
shift $((OPTIND-1))

(( $# )) || usage_err

# ----------------------------------------

sub=$1
shift

case $sub in
    algos)
        openssl list -all-algorithms
        ;;

    cat)
        case $1 in
            asn1) openssl asn1parse -i ;;
            # `openssl ec` can read rsa keys too
            ec | rsa) openssl "$1" -check -text -noout ;;
            req) openssl "$1" -text -noout ;;
            sess) openssl sess_id -text -noout ;;
            x509) openssl "$1" -text -fingerprint -noout ;;
            *) usage_err ;;
        esac
        ;;

    catall)
        while "$prgname" cat "$1"; do :; done
        ;;

    check)
        curl -qsSLf https://www.howsmyssl.com/a/check | jq .
        ;;

    ciphers)
        openssl ciphers -stdname -V "$@"
        ;;

    ciphers-ecdsa-rsa)
        # aECDSA    - ECDSA authentication
        # aRSA      - RSA authentication
        # !PSK      - pre-shared keys
        # !AESCCM   - AES CCM ciphers
        # !CBC      - CBC ciphers (deprecated, insecure)
        # !eNULL    - no encryption
        # !SHA1     - SHA1 digest (deprecated, insecure)
        openssl ciphers -stdname -V 'TLS_CHACHA20_POLY1305_SHA256:aECDSA:aRSA:!PSK:!AESCCM:!CBC:!eNULL:!SHA1'
        ;;

    con)
        openssl s_client -crlf -port 443 -connect "$@"
        ;;

    con-rsaonly)
        openssl s_client -crlf \
            -tls1_2 -cipher 'aRSA:!PSK:!AESCCM:!CBC:!eNULL:!SHA1' \
            -port 443 -connect "$@"
        ;;

    csplit)
        in=$1
        prefix=$(basename -- "$in")_
        csplit -kz -f "$prefix" -- "$in" /CONNECTED/ '{*}'
        ;;

    dhparam)
        openssl dhparam 4096
        #openssl genpkey -genparam -algorithm dh -pkeyopt pbits:4096
        #openssl genpkey -genparam -algorithm dh -pkeyopt group:ffdhe4096
        ;;

    gen)
        (( $# )) || set -- ed25519
        openssl genpkey -verbose -out key.pem \
            -aes256 -algorithm "$@"
        ;;

    gen+cert)
        #-addext 'subjectAltName = DNS:example.org'
        #-addext 'subjectAltName = IP:192.168.1.1'
        (( $# )) || set -- ed25519
        openssl req -verbose -out cert.pem -x509 -days 365 \
            -keyout key.pem -newkey "$@"
        ;;

    gen+csr)
        (( $# )) || set -- ed25519
        openssl req -verbose -out csr.pem \
            -keyout key.pem -newkey "$@"
        ;;

    *)
        usage_err
        ;;
esac
