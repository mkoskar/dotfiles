#!/usr/bin/env bash

set -eu -o pipefail
shopt -s nullglob inherit_errexit

prgname=${0##*/}

_usage() {
    cat <<-EOF
	usage: $prgname [option...]

	Compute SHA1 digest of EDIDs of all connected monitors.

	  -l    - list (default)
	  -r    - list raw
	  -s    - digest
	  -x    - interrogate X RandR outputs
	  -o    - exclude turned off monitors
	EOF
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

declare -i mode=0 xrandr=0 exoff=0
while getopts lrsxoh opt; do
    case $opt in
        l) mode=0 ;;
        r) mode=1 ;;
        s) mode=2 ;;
        x) xrandr=1 ;;
        o) exoff=1 ;;
        h) usage ;;
        *) usage_err ;;
    esac
done
shift $((OPTIND-1))

# ----------------------------------------

drm=/sys/class/drm

exclude() {
    (( exoff )) || return 0
    local out=$1
    local ddc=$drm/$out/ddc
    local bus_num power
    [[ $out = card[0-9]-LVDS-* ]] && return 0
    if [[ -L $ddc ]]; then
        bus_num=$(readlink -f "$ddc")
        bus_num=${bus_num##*/}
        bus_num=${bus_num#i2c-}
        if power=$(ddcutil --noconfig -t -b "$bus_num" getvcp d6 2>/dev/null); then
            read -r _ _ _ power <<<"$power"
            [[ $power = x05 ]] && return 1
        fi
    fi
    return 0
}

_sha1sum() {
    sha1sum | awk '{ print $1 }'
}

main() {
    local out status edid edidsum
    declare -A omap
    cd "$drm"
    for out in card[0-9]-*; do
        status=$(<"$out"/status)
        [[ $status = connected ]] || continue
        edid=$(hexdump -e '16/1 "%02x"' <"$out"/edid)
        edidsum=$(printf %s "$edid" | _sha1sum)
        if (( xrandr )); then
            omap[$edidsum]=$out
            continue
        fi
        exclude "$out" || continue
        if (( mode )); then
            printf '%s %s\n' "$out" "$edid"
        else
            printf '%s %s\n' "$out" "$edidsum"
        fi
    done
    (( xrandr )) || return 0
    local sysout
    while read -r out edid; do
        if [[ $edid = - ]]; then
            printf '%s - -\n' "$out"
            continue
        fi
        edidsum=$(printf %s "$edid" | _sha1sum)
        sysout=${omap[$edidsum]}
        exclude "$sysout" || continue
        if (( mode )); then
            printf '%s %s %s\n' "$out" "$sysout" "$edid"
        else
            printf '%s %s %s\n' "$out" "$sysout" "$edidsum"
        fi
    done < <(
        xrandr --verbose | awk '
            function fin() {
                if (out) printf "%s %s\n", out, buf
                edid = 0; buf = "-"
            }
            /^\S+ (dis)?connected/ {
                fin()
                if ($2 ~ /^connected/) out = $1
                else out = ""
                next
            }
            out && /\tEDID:/ {
                edid = 1; buf = ""
                next
            }
            edid && /\t\t/ {
                sub(/\t\t/, "")
                buf = buf $0
                next
            }
            { edid = 0 }
            END { fin() }
        '
    )
}

if (( mode > 1 )); then
    main | _sha1sum
else
    main
fi
