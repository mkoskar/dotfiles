#!/usr/bin/env bash

set -eu

prgname=${0##*/}

_usage() {
    cat <<-EOF
	usage: $prgname [-e pattern]... [-H] [-s] cmd [arg...]
	       $prgname [-e pattern]... [-H] [-s] {-v | -V} name [name...]

	  -e pattern    - exclude by glob(7) prefix pattern
	  -H            - exclude ~/bin/
	  -s            - use \$SYSPATH
	  -v            - print first found path
	  -V            - print all paths
	EOF
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

excludes=()
declare -i print=0
while getopts e:HsvVh opt; do
    case $opt in
        e) excludes+=("$OPTARG") ;;
        H) excludes+=(~/bin/) ;;
        s) PATH=$SYSPATH ;;
        v) print=1 ;;
        V) print=2 ;;
        h) usage ;;
        *) usage_err ;;
    esac
done
shift $((OPTIND-1))

(( $# )) || usage_err

# ----------------------------------------

if [[ $PATH = *$'\n'* ]]; then
    printf '%s: path contains NL\n' "$prgname" >&2
    exit 1
fi

paths=$(type -Pa -- "$1")
paths_=()
readarray -t paths <<<"$paths"
for p in "${paths[@]}"; do
    p=$(realpath -- "$p")
    for e in "${excludes[@]}"; do
        [[ $p = $e* ]] && continue 2
    done
    paths_+=("$p")
done

(( ${#paths_[@]} )) || exit 1

# shellcheck disable=SC2128
case $print in
    0)
        exec "$paths_" "${@:2}"
        ;;
    1)
        printf '%s\n' "$paths_"
        ;;
    2)
        printf '%s\n' "${paths_[@]}"
        ;;
esac
