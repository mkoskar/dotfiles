# vim: ft=sh
# shellcheck disable=SC2154

LVDS=65d1e95be0ef2fcf17e72b4a45bcb2b95bb127e8
HOME1=55434c5c4eda9883d77f4afa64ab814f36a68aed

declare -A mon
mon[LVDS]=$LVDS
mon[HOME1]=$HOME1

layout_profile() {
    local profile=
    [[ ${out[$LVDS]+set} && ${out[$HOME1]+set} ]] && profile=home
    [[ $profile ]] || profile=mobile
    echo "$profile"
}

handle_profile() {
    case $1 in
        all)
            xrandr_all
            ;;
        l2r)
            shift
            xrandr_l2r "$@"
            ;;
        mobile)
            set -- LVDS
            ;&
        *)
            xrandr_l2r "${out[${mon[$1]}]}"
            ;;
    esac
}

_layout_hook_default() {
    (( $# )) || return 0
    outputs
    [[ $1 = - ]] && set -- "$(layout_profile)"
    case $1 in
        home | LVDS_HOME1)
            xrandr_l2r "${out[$LVDS]}" "${out[$HOME1]}"
            ;;
        *)
            handle_profile "$@"
            ;;
    esac
}

# ----------------------------------------

layout_hook_default() {
    _layout_hook_default "$@"
}

layout_hook_intel() {
    _layout_hook_default "$@"
}

layout_hook_modesetting() {
    _layout_hook_default "$@"
}

layout_hook_zaphod() {
    (( $# )) || return 0
    outputs
    [[ $1 = - ]] && set -- "$(layout_profile)"
    case $1 in
        home)
            set -- HOME1
            ;&
        *)
            handle_profile "$@"
            ;;
    esac
}

# ----------------------------------------

if [[ ${1-} = --zsh-compdef ]]; then
    cat <<-'EOF'
	_xscreen () {
	    declare -A opt_args
	    local curcontext=$curcontext state line
	    _arguments -C '(-)*:: :->optarg' && return
	    case $state in optarg)
	        if (( CURRENT == 1 )); then
	            _alternative \
	                'profiles:profiles:(LVDS_HOME1 all home mobile)' \
	                'monitors:monitors:(HOME1 LVDS)' \
	                'functions:functions:(l2r)'
	            return
	        fi
	        if [[ ${words[1]} = l2r ]]; then
	            local xrandr_out=(${(f)"$(_call_program outputs xrandr)"})
	            _alternative \
	                'connected:connected outputs:('${(j: :)${(uo)${(M)xrandr_out:#* connected*}%% *}}')' \
	                'disconnected:disconnected outputs:('${(j: :)${(uo)${(M)xrandr_out:#* disconnected*}%% *}}')'
	        fi
	        ;;
	    esac
	}
	_xscreen
	EOF
    exit
fi
