#!/usr/bin/env bash

set -eu -o pipefail

prgname=${0##*/}

_usage() {
    echo "usage: $prgname [-6] [-l|-n]"
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

prefix=ip
postfix=

while getopts 6lnh opt; do
    case $opt in
        6) prefix=ip6 ;;
        l) postfix=legacy ;;
        n) postfix=nft ;;
        h) usage ;;
        *) usage_err ;;
    esac
done
shift $((OPTIND-1))

if (( EUID )); then
    echo 'This script must be run with root privileges.' >&2
    exit 1
fi

# ----------------------------------------

tables=("$@")
if (( ! ${#tables[@]} )); then
    src=/proc/net/${prefix}_tables_names
    [[ -e $src ]] && readarray -t tables <"$src"
fi
if (( ! ${#tables[@]} )); then
    tables=(filter nat)
fi

iptables=${prefix}tables${postfix:+-}${postfix}

for table in "${tables[@]}"; do
    case $table in
        filter)
            cat <<-'EOF'
			*filter
			:INPUT ACCEPT [0:0]
			:FORWARD ACCEPT [0:0]
			:OUTPUT ACCEPT [0:0]
			COMMIT
			EOF
        ;;
        mangle)
            cat <<-'EOF'
			*mangle
			:PREROUTING ACCEPT [0:0]
			:INPUT ACCEPT [0:0]
			:FORWARD ACCEPT [0:0]
			:OUTPUT ACCEPT [0:0]
			:POSTROUTING ACCEPT [0:0]
			COMMIT
			EOF
        ;;
        nat)
            cat <<-'EOF'
			*nat
			:PREROUTING ACCEPT [0:0]
			:OUTPUT ACCEPT [0:0]
			:POSTROUTING ACCEPT [0:0]
			COMMIT
			EOF
        ;;
        raw)
            cat <<-'EOF'
			*raw
			:PREROUTING ACCEPT [0:0]
			:OUTPUT ACCEPT [0:0]
			COMMIT
			EOF
        ;;
        security)
            cat <<-'EOF'
			*security
			:INPUT ACCEPT [0:0]
			:FORWARD ACCEPT [0:0]
			:OUTPUT ACCEPT [0:0]
			COMMIT
			EOF
        ;;
    esac
done | "$iptables-restore"
