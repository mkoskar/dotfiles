#!/usr/bin/env bash

set -eu -o pipefail

tmpdir=$(mktemp -d)
cleanup() { rm -rf "$tmpdir"; }
trap cleanup EXIT

cd "$tmpdir"

export SHELL=$BASH
export UAGENT=${UAGENT:-Mozilla/5.0 (Windows NT 10.0; Win64; x64)}

if (( EUID )); then
    export CONFDIR=~/.config/hostsblock
    export CACHEDIR=~/.cache/hostsblock
else
    export CONFDIR=/etc/hostsblock
    export CACHEDIR=/var/cache/hostsblock
    export HOME=$tmpdir
fi
mkdir -p "$CACHEDIR"

pargs=()
[[ -t 1 ]] && pargs+=(--bar) || pargs+=(--silent)

fetch() {
    set -eu -o pipefail
    local url=$1 oname stat scode surl
    oname=$(printf %s "$url" | sha1sum)
    read -r oname _ <<<"$oname"
    stat=$(
        curl -sSL -C - -z "$CACHEDIR/$oname" \
            -w '%{http_code}\t%{url_effective}' \
            ${UAGENT:+-A "$UAGENT"} \
            -o "$oname" "$url"
    )
    read -r scode surl <<<"$stat"
    case $scode in
        200)
            mv "$oname" "$CACHEDIR/$oname"
            ;;
        304)
            ;;
        *)
            exec >&2
            echo "HTTP $scode : $surl"
            cat "$oname"
            return 1
            ;;
    esac
    echo "$CACHEDIR/$oname"
}
export -f fetch

grep -Evx '\s*|(\s*#.*)' "$CONFDIR"/sources |
    parallel "${pargs[@]}" -j 10 fetch >queue

[[ ! -e $CONFDIR/whitelist ]] || export whitelist=1

{
    sort queue
    [[ ! ${whitelist-} ]] || printf '%s\n' "$CONFDIR"/whitelist
} | xargs -rx sha1sum >sum
if cmp -s sum "$CACHEDIR"/sum; then
    exit
fi

process() {
    set -eu
    local src=$1
    local oname=${src##*/} mime target
    mime=$(file -b --mime-type -- "$src")
    case $mime in
        application/x-7z-compressed)
            target=$oname.extracted
            7z x -o "$target" -- "$src" >/dev/null
            ;;
        application/zip)
            target=$oname.extracted
            unzip -qq -d "$target" -- "$src"
            ;;
        text/*)
            target=$1
            ;;
    esac
    if [[ -d $target ]]; then
        find "$target" \
            \( \
                -iname hosts -o \
                -iregex '.*/add\.[^./]*' -o \
                -iregex '.*/hosts\.[^./]*' -o \
                -name 'Yahoo_*' -o \
                -name main \
            \) -exec cat {} +
    else
        cat "$target"
    fi
}
export -f process

nproc=$(nproc)
nice parallel "${pargs[@]}" process <queue |
    dos2unix | split -d -n r/"$nproc" -
find "$tmpdir" -name x\* >chunks

post_process() {
    set -eu -o pipefail
    awk '
        /^\s*#/ || /^\s*$/ { next }
        {
            if (NF > 1) target = $2
            else target = $1
            print target
        }
    ' <"$1" |
        grep -Ev -e '[^[:alnum:]._-]' -e '^[^[:alnum:]]' -e '[^[:alnum:]]$' \
            ${whitelist:+-f "$CONFDIR"/whitelist} |
        awk '{ print "0.0.0.0 " $0 }' >"$1".done
}
export -f post_process

nice parallel "${pargs[@]}" post_process <chunks

xargs -r -I {} cat {}.done <chunks | sort -u >"$CACHEDIR"/hosts
mv sum "$CACHEDIR"/sum
