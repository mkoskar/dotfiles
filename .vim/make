#!/usr/bin/env bash

set -eu -o pipefail

vim_batch() { vim -NXn -i NONE -u NONE -V1 -es "$@"; }
export -f vim_batch

from_git() {
    set -u
    printf '\n> %s\n' "$1"
    if cd "$1" &>/dev/null; then
        git update
    else
        git clone-shallow "${@:2}" "$1"
    fi
}
export -f from_git

from_vba() {
    set -eu
    local name=$1 url=$2 oname stat scode surl mime
    printf '\n> %s\n' "$name"
    oname=$name.download
    stat=$(
        curl -qsSL -C - -z "$oname" \
            -w '%{http_code}\t%{url_effective}' \
            -o "$oname" "$url"
    )
    read -r scode surl <<<"$stat"
    case $scode in
        200 | 304)
            ;;
        *)
            exec >&2
            echo "HTTP $scode : $surl"
            cat "$oname"
            return 1
            ;;
    esac
    mime=$(file -b --mime "$oname")
    if [[ $mime != text/* ]]; then
        gunzip -ck "$oname" >"$name.vba"
    fi
    rm -rf .vbaout "$name"
    yes '' | vim_batch \
        -c "try | call vimball#Vimball(1, '.vbaout') | finally | qa! | endtry" \
        "$name.vba" 2>&1
    mv .vbaout "$name"
    echo
}
export -f from_vba

cd ~/.vim

mkdir -p pack/custom/opt
cd pack/custom/opt

# ----------------------------------------

parallel -r <<-'EOF'

	from_git ale                https://github.com/dense-analysis/ale
	from_git asyncomplete       https://github.com/prabirshrestha/asyncomplete.vim
	from_git asyncomplete-lsp   https://github.com/prabirshrestha/asyncomplete-lsp.vim
	from_git bufexplorer        https://github.com/jlanzarotta/bufexplorer
	from_git clang-format       https://github.com/rhysd/vim-clang-format
	from_git coc                https://github.com/neoclide/coc.nvim
	from_git colorschemes       https://github.com/flazz/vim-colorschemes
	from_git ctrlp              https://github.com/ctrlpvim/ctrlp.vim
	from_git dirvish            https://github.com/justinmk/vim-dirvish
	from_git easy-align         https://github.com/junegunn/vim-easy-align
	from_git easymotion         https://github.com/easymotion/vim-easymotion
	from_git editorconfig       https://github.com/editorconfig/editorconfig-vim
	from_git emmet              https://github.com/mattn/emmet-vim
	from_git fastfold           https://github.com/Konfekt/FastFold
	from_git fugitive           https://github.com/tpope/vim-fugitive
	from_git fzf-ext            https://github.com/junegunn/fzf.vim
	from_git gnupg              https://github.com/jamessan/vim-gnupg
	from_git goyo               https://github.com/junegunn/goyo.vim
	from_git indentline         https://github.com/Yggdroot/indentLine
	from_git limelight          https://github.com/junegunn/limelight.vim
	from_git neomake            https://github.com/neomake/neomake
	from_git nerdtree           https://github.com/preservim/nerdtree
	from_git nvim-lspconfig     https://github.com/neovim/nvim-lspconfig
	from_git nvim-plenary       https://github.com/nvim-lua/plenary.nvim
	from_git nvim-popup         https://github.com/nvim-lua/popup.nvim
	from_git nvim-telescope     https://github.com/nvim-telescope/telescope.nvim
	from_git nvim-treesitter    https://github.com/nvim-treesitter/nvim-treesitter
	from_git repeat             https://github.com/tpope/vim-repeat
	from_git rust               https://github.com/rust-lang/rust.vim
	from_git snippets           https://github.com/honza/vim-snippets
	from_git speeddating        https://github.com/tpope/vim-speeddating
	from_git stabs              https://github.com/Thyrum/vim-stabs
	from_git surround           https://github.com/tpope/vim-surround
	from_git tagbar             https://github.com/majutsushi/tagbar
	from_git tcomment           https://github.com/tomtom/tcomment_vim
	from_git toml               https://github.com/cespare/vim-toml
	from_git ultisnips          https://github.com/SirVer/ultisnips
	from_git undotree           https://github.com/mbbill/undotree
	from_git unimpaired         https://github.com/tpope/vim-unimpaired
	from_git vim-lsp            https://github.com/prabirshrestha/vim-lsp
	from_git vim-lsp-ale        https://github.com/rhysd/vim-lsp-ale
	from_git vim-lsp-settings   https://github.com/mattn/vim-lsp-settings
	from_git vimspector         https://github.com/puremourning/vimspector
	from_git visualrepeat       https://github.com/inkarkat/vim-visualrepeat
	from_vba ansiesc            https://www.drchip.org/astronaut/vim/vbafiles/AnsiEsc.vba.gz

EOF

echo
echo '> helptags'
vim_batch -c '
    for dir in glob("*/doc", 1, 1)
        try | exec "helptags" dir | catch | endtry
    endfor
    qa!
'

echo
