# vim: ft=muttrc

set shell = /bin/bash

set my_comm = "`ps --pid $PPID -o comm=`"
set my_mail = $MAILDIR
set folder = $my_mail

set alias_file = $my_home/aliases
set bounce = ask-no
set certificate_file = $my_home/certificates
set change_folder_next
set delete
set editor = 'e +/^$ ++1 +noh'
set flag_safe
set header_cache = $my_home/cache/headers
set history = 100
set history_file = $my_home/history
set history_remove_dups
set ispell = 'aspell -e --email-margin=0 --run-together -c'
set mail_check = 5
set mail_check_stats
set mail_check_stats_interval = 5
set mailcap_path = $my_home/mailcap
set mbox_type = Maildir
set message_cache_clean
set message_cachedir = $my_home/cache/messages
set pipe_decode
set save_history = 100
set sleep_time = 0
set ssl_force_tls
set time_inc = 50
set timeout = 5
set ts_enabled
set wrap = -1
unset beep
unset confirmappend
unset help
unset mail_check_recent
unset mark_old
unset use_domain
unset user_agent
unset wait_key

attachments +A */.*
attachments -A application/pgp.*
attachments -A application/x-pkcs7-.*
attachments -A message/external-body
attachments -A text/x-vcard

attachments +I text/plain
attachments -I message/external-body

unmime_lookup *
mime_lookup application/octet-stream


# Threading
# ----------------------------------------

# '&' for each parent message hidden due to limiting
# '*' threaded by subject instead of message-id
# '=' duplicate message
# '?' parent message missing

set duplicate_threads
unset collapse_unread
unset hide_missing
unset hide_top_missing


# Formats
# ----------------------------------------

set alias_format = '%3n %t %-40.40r    %a'
set attach_format = '[%u%D%I] %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s]'
set date_format = '!%b %d'
set folder_format = '%3C %t %N %F %3l %-8.8u %-8.8g %8s (%5n/%5m) %d %f'
set query_format = '%3c %t %-40.40a    %n %?e?(%e)?'
set status_format = '[%r] %f %l (%n/%m)%?F? [%F]?%?p? P:%p?%?d? D:%d?%?t? T:%t?%?V? ⟫ %V (%M)? %> %s/%S (%P)'


# Index
# ----------------------------------------

set reply_regexp = '^(([Rr][Ee]?(\[[0-9]+\])?: *)?(\[[^]]+\] *)?)*'
set reverse_alias
set sort_aux = reverse-date-received

#index-format-hook date ~r<1d '%(! %H:%M)'
#index-format-hook date ~r<1m '%(!%a %d)'
#index-format-hook date ~r<1y '%(!%b %d)'
#index-format-hook date ~A    '%(! %m/%y)'
#index-format-hook collapsed ~v '+-- %3E messages: '

source $my_home/index_format1
source $my_home/sort_date


# Pager
# ----------------------------------------

set menu_scroll
set pager_context = 5
set pager_format = '%C [%Z] %c > %n > %s%* (%P)'
set pager_index_lines = 11
set pager_stop
set quote_regexp = '^([ \t]*>)+'
set tilde
unset markers

unalternative_order *
alternative_order text/plain text/enriched text/html

unauto_view *
auto_view text/html

ignore *
unignore cc date from list-archive list-id subject to user-agent x-mailer x-url

unhdr_order *
hdr_order date from to cc subject list-id list-archive user-agent x-mailer x-url


# Compose
# ----------------------------------------

set abort_nosubject = ask-no
set askcc
set compose_format = 'Compose [Approx. msg size: %l  Atts: %a]'
set edit_headers
set fast_reply
set forward_format = 'Fwd: %s'
set forward_quote
set include
set mime_forward = ask-no
set realname = 'Miroslav Koškár' # overriden by name in $from, if any
set recall = ask-no
set reply_to
set reverse_name
set signature = ~/.signature
set use_envelope_from
unset abort_unmodified
unset reverse_realname

unmy_hdr *
#my_hdr OpenPGP: url=https://keybase.io/mkoskar/key.asc


# PGP and S/MIME
# ----------------------------------------

# %p    Expands to PGPPASSFD=0 when a pass phrase is needed, to an empty
#       string otherwise. Note: This may be used with a %? construct.
#
# %f    Expands to the name of a file containing a message.
#
# %s    Expands to the name of a file containing the signature part of a
#       multipart/signed attachment when verifying it.
#
# %a    The value of $pgp_sign_as.
#
# %r    One or more key IDs.

set crypt_replysign
set crypt_replysignencrypted
set pgp_auto_decode
set pgp_clearsign_command = 'gpg --no-verbose --quiet --batch %?p?--passphrase-fd 0? --armor --textmode --clearsign %?a?-u %a? --output - %f'
set pgp_decode_command = 'gpg --no-verbose --quiet --batch --status-fd=2 %?p?--passphrase-fd 0? --trust-model always --no-auto-check-trustdb --verify-options show-primary-uid-only,no-show-policy-urls --output - %f'
set pgp_decrypt_command = 'gpg --no-verbose --quiet --batch --status-fd=2 %?p?--passphrase-fd 0? --output - %f'
set pgp_encrypt_only_command = 'pgpewrap gpg --no-verbose --quiet --batch --armor --textmode --trust-model always --encrypt --output - -- -r %r -- %f'
set pgp_encrypt_sign_command = 'pgpewrap gpg --no-verbose --quiet --batch %?p?--passphrase-fd 0? --armor --textmode --trust-model always --encrypt --sign %?a?-u %a? --output - -- -r %r -- %f'
set pgp_export_command = 'gpg --no-verbose --armor --export %r'
set pgp_good_sign = '^gpgv?: Good signature from '
set pgp_import_command = 'gpg --no-verbose --import %f'
set pgp_list_pubring_command = 'gpg --no-verbose --quiet --batch --with-colons --list-keys %r'
set pgp_list_secring_command = 'gpg --no-verbose --quiet --batch --with-colons --list-secret-keys %r'
set pgp_sign_command = 'gpg --no-verbose --quiet --batch %?p?--passphrase-fd 0? --armor --textmode --detach-sign %?a?-u %a? --output - %f'
set pgp_use_gpg_agent
set pgp_verify_command = 'gpg --no-verbose --quiet --batch --status-fd=2 --trust-model always --no-auto-check-trustdb --verify-options show-primary-uid-only,no-show-policy-urls --verify --output - %s %f'
set pgp_verify_key_command = 'gpg --verbose --batch --fingerprint --check-sigs %r'
unset pgp_show_unusable


# Key Bindings
# ----------------------------------------

bind generic        *           noop
bind generic        ?           noop
bind generic        =           noop
bind generic        Z           noop
bind generic        [           noop
bind generic        ]           noop
bind generic        ?           search-reverse
bind generic        N           search-opposite
bind generic        \cF         next-page
bind generic        \cB         previous-page
bind generic        \cD         half-down
bind generic        \cU         half-up
bind generic        \cP         previous-entry
bind generic        \cN         next-entry
bind generic        \e?         help
bind generic        g           first-entry
bind generic        G           last-entry
bind generic        z           noop
bind generic        zb          current-bottom
bind generic        zz          current-middle
bind generic        zt          current-top
bind generic,pager  (           previous-entry
bind generic,pager  )           next-entry

bind index          x           noop
bind index          L           bottom-page         # generic
bind index          M           middle-page         # generic
bind index          g           first-entry         # generic
bind index          G           last-entry          # generic
bind index          zm          collapse-all
bind index          zr          collapse-all
bind index          zc          collapse-thread
bind index          zo          collapse-thread
bind index          .           next-unread-mailbox
bind index          \cQ         exit
bind index,pager    &           noop
bind index,pager    \#          noop
bind index,pager    o           noop
bind index,pager    O           noop
bind index,pager    I           imap-fetch-mail
bind index,pager    J           next-unread
bind index,pager    K           previous-unread
bind index,pager    N           search-opposite     # generic
bind index,pager    R           group-reply
bind index,pager    \cF         next-page           # generic
bind index,pager    \cB         previous-page       # generic
bind index,pager    \cD         half-down           # generic
bind index,pager    \cU         half-up             # generic
bind index,pager    \cP         previous-undeleted  # generic
bind index,pager    \cN         next-undeleted      # generic
bind index,pager    \cY         next-line
bind index,pager    \cE         previous-line
bind index,pager    s           sort-mailbox
bind index,pager    S           sort-reverse
bind index,pager    [           previous-subthread
bind index,pager    ]           next-subthread
bind index,pager    {           previous-thread
bind index,pager    }           next-thread
bind index,pager    p           parent-message
bind index,pager    P           root-message
bind index,pager    @           compose-to-sender
bind index,pager    ,@          display-address
bind index,pager    ,r          recall-message

bind pager          Q           noop
bind pager          \e?         help
bind pager          g           top
bind pager          G           bottom
bind pager          <down>      next-line
bind pager          <up>        previous-line
bind pager          >           next-line
bind pager          <           previous-line
bind pager          <return>    exit
bind pager          .           next-unread
bind pager          \e.         previous-unread
bind pager          \ek         previous-entry
bind pager          \;          previous-entry
bind pager          \ej         next-entry
bind pager          \'          next-entry
bind pager          <space>     skip-quoted

bind alias          <tab>       exit

bind query          \cO         exit

bind attach         \cF         next-page           # generic
bind attach         \cB         previous-page       # generic
bind attach         L           bottom-page         # generic
bind attach         G           last-entry          # generic
bind attach         g           first-entry         # generic
bind attach         o           view-attach

bind browser        o           noop
bind browser        O           noop
bind browser        N           search-opposite     # generic
bind browser        s           sort
bind browser        S           sort-reverse
bind browser        e           view-file
bind browser        \es         subscribe
bind browser        \eu         unsubscribe

bind editor         \cT         noop
bind editor         \cO         complete-query
bind editor         \cP         history-up
bind editor         \cN         history-down
bind editor         <space>     noop
bind editor         \e<space>   buffy-cycle


# Macros
# ----------------------------------------

macro generic,index \ej )))
macro generic,index \ek (((

macro index \'1 '<limit>~r \=0d<enter>' 'limit today messages'
macro index \'2 '<limit>~r \=1d<enter>' 'limit 1 day old messages'
macro index \'3 '<limit>~r >2d<enter>' 'limit 2 days old messages'
macro index \'\' '<limit>all<enter>' 'cancel limit'
macro index \c_ <tag-prefix><save-message> 'save messages'
macro index \eb '<search>~b ' 'search in message bodies'
macro index o <enter>
macro index q <change-folder>!<enter> 'go to spoolfile mailbox'
macro index,pager * <tag-pattern>~A<enter> 'tag all'
macro index,pager 0 <tag-pattern>~N<enter> 'tag new'
macro index,pager <backspace> <untag-pattern>~A<enter> 'untag all'
macro index,pager - <tag-prefix><clear-flag>N 'mark all tagged messages as read'
macro index,pager W <tag-prefix><clear-flag> 'clear a status flag on all tagged messages'
macro index,pager w <tag-prefix><set-flag> 'set a status flag on all tagged messages'
macro index,pager Z '<shell-escape>mbsync &<enter>' 'trigger mailboxes synchronization'
macro index,pager \ea <change-folder>!!<enter> 'go to previous mailbox'
macro index,pager <tab> <change-folder>? 'browse mailboxes'
macro index,pager,attach O '<pipe-entry>ebase -c set\ bt=nofile<enter>' 'view in $PAGER'

macro pager \c_ <save-message> 'save message'
macro pager j >>>>>
macro pager k <<<<<
macro pager o q

macro attach \cO '<pipe-entry>stdiner -bt b0<enter>' 'view in browser'

macro browser \ea <exit>\ea 'go to previous mailbox'
macro browser <space> <return>
macro browser o <return>
macro browser u p

macro compose Y pcy 'send the message without PGP'
macro compose v <edit-from>^Ume-<tab> 'select from'


# Sidebar
# ----------------------------------------

#set sidebar_new_mail_only
#set sidebar_visible
set sidebar_folder_indent
set sidebar_format = ' %B%?F? [%F]?%* %?N?%N? '
set sidebar_indent_string = ' '
set sidebar_next_new_wrap
set sidebar_short_path
set sidebar_width = 25

bind index <space> sidebar-open

macro index,pager \eN <sidebar-next> sidebar-next
macro index,pager \eP <sidebar-prev> sidebar-prev
macro index,pager \en <sidebar-next><sidebar-open> 'sidebar-next & sidebar-open'
macro index,pager \ep <sidebar-prev><sidebar-open> 'sidebar-prev & sidebar-open'
macro index,pager,compose ~ '<enter-command>toggle sidebar_visible<enter>' 'toggle sidebar'


# Global Includes
# ----------------------------------------

source $alias_file
source $my_home/colors
