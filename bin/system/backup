#!/usr/bin/env bash

set -eu

if (( EUID )); then
    echo 'This script must be run with root privileges.' >&2
    exit 1
fi

prgname=${0##*/}

part=/dev/disk/by-uuid/a10fd9bc-f55c-4d83-8bb7-a0345da60247
fs=/dev/disk/by-uuid/95908df8-35c5-4f39-a57b-ca0a091b4eda
target=/mnt/backups
mapper=/dev/mapper/backups

log_prefix="$prgname $$"
log() { printf '%s\n' "$log_prefix: $*"; } >&2

cleanup() {
    log "exiting ($?)"
    if [[ -e $part ]]; then
        log 'setting standby'
        part_rp=$(realpath -- "$part")
        hdparm -S 12 "${part_rp%%[0-9]}" &>/dev/null
    fi
}
trap cleanup EXIT

# backup-setup

if [[ $prgname = backup-setup ]]; then
    if [[ ! -e $part ]]; then
        log 'target partition missing'
        exit 1
    fi

    if [[ ! -e $fs ]]; then
        cryptsetup open --type luks "$part" backups
    fi

    fs_rp=$(realpath -- "$fs")
    mapper_rp=$(realpath -- "$mapper")
    if [[ $fs_rp != "$mapper_rp" ]]; then
        log "$mapper: mapper misconfigured"
        exit 1
    fi

    mkdir -p "$target"
    if ! findmnt -M "$target" -S "$mapper" &>/dev/null; then
        mount "$mapper" "$target"
    fi
    exit
fi

# backup

logdir=/var/log/local
mkdir -p "$logdir"

exec 8>>"$logdir"/backup.log
if [[ -t 2 ]]; then
    exec &> >(tee -a /dev/fd/8 >&2)
else
    exec >&8 2>&1
fi

exec 8>/run/backup.lock
if ! flock -n 8; then
    log "$target: full-backup in progress"
    exit 3
fi

if [[ ! -e $part ]]; then
    log "$target: target partition missing"
    exit 2
fi

if [[ ! -d $target || ! -w $target ]]; then
    log "$target: not a directory or not a writable one"
    exit 11
fi

fs_rp=$(realpath -- "$fs")
mapper_rp=$(realpath -- "$mapper")
if [[ $fs_rp != "$mapper_rp" ]]; then
    log "$mapper: mapper misconfigured"
    exit 12
fi

if ! findmnt -M "$target" -S "$mapper" &>/dev/null; then
    log "$target: mountpoint misconfigured"
    exit 12
fi

printf -v ts_beg '%(%s)T'
printf -v ts_beg_ '%(%F.%s)T' "$ts_beg"

log "-- $ts_beg_"

mkdir -p "$target"/full-backup
rsync -aHAXS / "$target"/full-backup/master \
      --delete \
      --backup \
      --backup-dir=../"$ts_beg_" \
      --exclude-from=- <<-'EOF'
	/boot/lost+found
	/dev/*
	/home/*/.cache/*
	/home/*/tmp/*
	/home/cache/*
	/home/docker.img
	/home/lost+found
	/home/machines.img
	/media/*
	/mnt/*
	/proc/*
	/run/*
	/sys/*
	/tmp/*
	/var/cache/pacman/*
	/var/lib/docker/*
	/var/lib/machines/*
	/var/lib/pacman/sync/*
EOF

printf -v ts_end '%(%s)T'
log "total time: $(((ts_end-ts_beg)/60)) minutes, $(((ts_end-ts_beg)%60)) seconds"
