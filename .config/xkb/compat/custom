// vim: ft=xkb

default partial
xkb_compatibility "default" {

    interpret Shift_R+AnyOfOrNone(all) {
        action = SetMods(modifiers=Shift, clearLocks);
    };

    interpret Prev_Virtual_Screen+AnyOfOrNone(all) {
        action = SwitchScreen(screen=-1, !same);
    };

    interpret Next_Virtual_Screen+AnyOfOrNone(all) {
        action = SwitchScreen(screen=+1, !same);
    };

    include "custom(mousekeys)"

};

partial
xkb_compatibility "mousekeys" {

    interpret.repeat = True;

    //interpret u+AnyOfOrNone(all) { action = PtrBtn(button=1); };
    //interpret i+AnyOfOrNone(all) { action = PtrBtn(button=2); };
    //interpret o+AnyOfOrNone(all) { action = PtrBtn(button=3); };

    interpret u+AnyOfOrNone(all) { action = LockPtrBtn(button=1,affect=both); };
    interpret i+AnyOfOrNone(all) { action = LockPtrBtn(button=2,affect=both); };
    interpret o+AnyOfOrNone(all) { action = LockPtrBtn(button=3,affect=both); };

    interpret h+AnyOfOrNone(all) { action = MovePtr(x=-15,!accel); };
    interpret j+AnyOfOrNone(all) { action = MovePtr(y=+15,!accel); };
    interpret k+AnyOfOrNone(all) { action = MovePtr(y=-15,!accel); };
    interpret l+AnyOfOrNone(all) { action = MovePtr(x=+15,!accel); };

    interpret H+AnyOfOrNone(all) { action = MovePtr(x=-1); };
    interpret J+AnyOfOrNone(all) { action = MovePtr(y=+1); };
    interpret K+AnyOfOrNone(all) { action = MovePtr(y=-1); };
    interpret L+AnyOfOrNone(all) { action = MovePtr(x=+1); };

};
